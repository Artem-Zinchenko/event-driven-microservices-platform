version: '2'

networks:
  prodnetwork:
    driver: bridge

volumes:
  registry-stuff:
    driver: local

services:
  edmp-monitoring:
    image: codecentric/edmp-monitoring
    ports:
      - "10001:8080"
    networks:
      - prodnetwork
  edmp-config-server:
    image: codecentric/edmp-config-server
    ports:
      - "18888:8888"
    networks:
      - prodnetwork
    environment:
      # CONFIG_REPO: "${CONFIG_REPO}"
      CONFIG_REPO: "https://github.com/codecentric/event-driven-microservices-platform-config.git"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - prodnetwork
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - prodnetwork
    links:
      - zookeeper:zk
    depends_on:
      - zookeeper
  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - "29000:9000"
    environment:
      ZK_HOSTS: zk:2181
    networks:
      - prodnetwork
    links:
      - zookeeper:zk
    depends_on:
      - zookeeper

  nexus:
    image: codecentric/edmp-nexus
    ports:
      - "18081:8081"

  jenkins:
    image: codecentric/edmp-jenkins
    ports:
      - "18080:8080"
    links:
      - nexus:nexus
      - sonar:sonar
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/bin/docker

  registry:
    image: registry
    environment:
      - STORAGE_PATH=/registry
    volumes:
      - registry-stuff:/registry
    ports:
      - "5000:5000"

  sonar:
    image: codecentric/edmp-sonar
    ports:
     - "19000:9000"
    environment:
     - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
    depends_on:
      - sonardb
  sonardb:
    image: postgres
    ports:
     - "5432:5432"
    environment:
     - POSTGRES_USER=sonar
     - POSTGRES_PASSWORD=sonar
